/*! news-dashboard 2016-01-11 */
window.global = window,
    function(a) {
        var b = {},
            c = {};
        a.define = function(a, c) {
            if (b[a]) throw new Error('[ "' + a + "\" ] already exists, don't repeat the definition");
            b[a] = c
        },
            a.require = function(a) {
                return c[a] ? c[a] : (c[a] = {},
                    b[a](c[a]), c[a])
            }
    } (this),
    define("utility",
        function(a) {
            "use strict";
            a.dateToFormatStr = function(a, b) {
                var c = b && b.dailyFormat || "MM/DD",
                    d = b && b.hourlyFormat || "MM/DD HH:mm",
                    e = window.settings.timezone ? global.moment(new Date(a)).tz(window.settings.timezone) : global.moment(new Date(a)).utc(),
                    f = b && "day" === b.granularity;
                return e.format(f ? c: d)
            },
                a.formatNumberStr = function(a) {
                    return a.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")
                },
                a.formatNumberPrecision = function(a, b) {
                    var c = Math.pow(10, b || 3);
                    return Math.round(a * c) / c
                },
                a.createUtcTime = function(a) {
                    return new Date(global.moment(new Date(a)).format("YYYY-MM-DDTHH:00")).getTime()
                },
                a.createLocalTime = function(a) {
                    return window.settings.timezone ? new Date(global.moment(new Date(a)).tz(window.settings.timezone)).getTime() : new Date(global.moment(new Date(a)).format("YYYY-MM-DDTHH:00")).getTime()
                },
                a.formatLabelStr = function(a, b) {
                    return b && "string" == typeof b ? b.replace("%s", a) : a
                }
        }),
    define("common/form",
        function(a) {
            "use strict";
            function b(a, b, c) {
                var d = "object" != typeof a ? JSON.parse(a) : a,
                    e = "";
                if (e += b.toString() + "\r\n\n", c) {
                    var f = "";
                    for (var g in d[0]) f += g + ",";
                    f = f.slice(0, -1),
                        e += f + "\r\n"
                }
                for (var h = 0; h < d.length; h++) {
                    var f = "";
                    for (var g in d[h]) f += '"' + d[h][g] + '",';
                    f.slice(0, f.length - 1),
                        e += f + "\r\n"
                }
                if ("" == e) return void alert("Invalid data");
                var i = "csv_" + 1 * new Date;
                i += b.toString().replace(/ /g, "_");
                var j = "data:text/csv;charset=gb2312,\ufeff" + encodeURIComponent(e),
                    k = document.createElement("a");
                k.href = j,
                    k.setAttribute("style", "visibility:hidden"),
                    k.download = i + ".csv",
                    document.body.appendChild(k),
                    k.click(),
                    document.body.removeChild(k)
            }
            var c, d, e, f, g, h, i, j, k, l, m, n, o, p;
            c = function() {
                var a = $("form.dimensionForm", this),
                    b = $(".start input.datex", a),
                    c = $(".end input.datex", a),
                    d = b.data("backdays") || 7,
                    e = c.data("backdays") || 0,
                    f = global.moment.utc().subtract(d, "days").format("YYYY/MM/DD 00:00"),
                    k = global.moment.utc().subtract(e, "days").format("YYYY/MM/DD 24:00");
                $(".datex", a).datetimepicker({
                    format: b.data("format"),
                    minDate: window.settings["data-start-time"] || "2015-05-24",
                    maxDate: global.moment.utc().add(90, "days").format("YYYY-MM-DD")
                }),
                    b.data("DateTimePicker").date(f),
                    c.data("DateTimePicker").date(k),
                    $(".dimension-select", a).each(function() {
                        var a = $(this),
                            b = a.data("defaults").toString().split(",");
                        a.select2({
                            theme: "bootstrap",
                            dropdownAutoWidth: !0,
                            tags: !0,
                            data: a.data("options"),
                            matcher: function(a, b) {
                                return "" === $.trim(a.term) ? b: b.text.toLowerCase().indexOf(a.term.toLowerCase()) >= 0 ? b: null
                            }
                        }),
                            b[0] && a.select2("val", b)
                    }),
                    $("form.metricForm input").change(function() {
                        h(i, j)
                    }),
                    $('input[name="granularity"]', a).change(function() {
                        a.submit()
                    }),
                    a.submit(function(a) {
                        a.preventDefault(),
                            g(function(a, b) {
                                h(b, j)
                            })
                    }),
                    a.submit(),
                    $(".toggleCharts").click(function() {
                        $(".chart-container").toggle()
                    })
            },
                g = function(a) {
                    var b, c, f = $(".chart-table-container"),
                        g = $("form.dimensionForm"),
                        h = $("button[type=submit]", g),
                        l = g.serializeArray(),
                        m = {};
                    h.attr("disabled", "disabled"),
                        f.hide(),
                        l.forEach(function(a) {
                            var b = a.name,
                                c = a.value,
                                d = {
                                    type: "in",
                                    values: []
                                };
                            b.indexOf("-not") < 0 && _.indexOf(["start_time", "end_time", "granularity"], b) < 0 && (m[b] || (m[b] = d), m[b].values.push(c))
                        }),
                        l.forEach(function(a) {
                            var b;
                            a.name.indexOf("-not") >= 0 && "on" === a.value && (b = a.name.replace("-not", ""), m[b] && (m[b].type = "not"))
                        }),
                        j = d(g),
                        c = e(),
                        b = {
                            startTime: j.startTime,
                            endTime: j.endTime,
                            granularity: j.granularity,
                            filter: m
                        },
                        c.length && (b.groupBy = c, j.groupBy = c),
                        j.postBody = b,
                        Pace.track(function() {
                            $.post(k, b).done(function(b) {
                                h.removeAttr("disabled"),
                                        200 === b.status ? (i = b.content, f.show(), a(null, i), $.notify(b.msg, {
                                    className: "success",
                                    autoHide: !0,
                                    autoHideDelay: 1e3
                                })) : (a(b), $.notify(b.msg, {
                                    className: "error",
                                    autoHide: !0
                                }))
                            }).fail(function(b) {
                                h.removeAttr("disabled"),
                                    a(b),
                                    $.notify("Request Failed!", {
                                        className: "error",
                                        autoHide: !0
                                    })
                            })
                        })
                },
                e = function() {
                    var a, b = $("form.groupbyForm"),
                        c = [];
                    return b.length && (a = b.serializeArray(), a.forEach(function(a) {
                        c.push(a.value)
                    })),
                        c
                },
                d = function(a) {
                    var b = {
                        granularity: $('input[name="granularity"]:checked', a).val(),
                        startTime: $('input[name="start_time"]', a).val(),
                        endTime: $('input[name="end_time"]', a).val(),
                        expids: $('select[name="expid"]', a).val() || ["*"]
                    };
                    return b
                },
                f = function() {
                    var a = $("form.metricForm"),
                        b = a.serializeArray(),
                        c = [];
                    return b.forEach(function(b) {
                        var d = $('input[value="' + b.value + '"]', a);
                        c.push({
                            label: d.data("label"),
                            name: b.value,
                            template: d.data("template")
                        })
                    }),
                        c
                },
                l = function(a) {
                    var b = "",
                        c = $("input[ value=" + a + "]");
                    return b = c ? c.attr("data-label") : a
                },
                m = function(a) {
                    var b;
                    return b = isNaN(1 * a) ? a: 1 * (1 * a).toFixed(3)
                },
                n = function(a) {
                    function b(a, b, d) {
                        a.forEach(function(a) {
                            var e = {},
                                f = a.result || a.event || a;
                            if (f) {
                                a.timestamp && (e.Timestamp = global.moment(a.timestamp).format("MMMM Do YYYY, h:mm:ss a")),
                                    d && (e.Timestamp = d),
                                    b && (e["Data Key"] = b);
                                for (var g in f)"title" == g ? e.Title = m($(f[g]).attr("title")) : "Date" != g && "timestamp" != g && ("url" == g ? e.Url = m(f[g]) : e[l(g)] = m(f[g]))
                            }
                            c.push(e)
                        })
                    }
                    var c = [];
                    if (a instanceof Array && a[0].result instanceof Array) b(a[0].result);
                    else if (a instanceof Array && a.length > 0) b(a);
                    else for (var d in a) {
                            var e = [{
                                    result: a[d].sum
                                }],
                                f = a[d].data;
                            a[d].sum && b(e, d, "Summary"),
                                f && b(f, d)
                        }
                    return c
                },
                o = function(a) {
                    var c = $('<button id="downloadExcel" class="btn-sm btn-success download_bt" href="javascript:void(0)">Download Excel</button>');
                    $(".dataTables_length").after(c),
                        c.click(function() {
                            var c = n(a);
                            b(JSON.stringify(c), "", !0)
                        })
                },
                h = function(a, b) {
                    var c = f(),
                        b = b || {};
                    a && (b.metrics = c, b.data = a, p(b), o(a))
                },
                a.init = function(a) {
                    $(document).ready(c),
                        k = a.dataUrl || "",
                        p = a.renderResult
                }
        }),
    define("page_detail/table",
        function(a) {
            "use strict";
            var b, c, d = require("utility");
            b = function(a) {
                var b = [];
                return a.forEach(function(a) {
                    var c = a.result || a.event,
                        d = a.timestamp;
                    _.isArray(c) ? c.forEach(function(a) {
                        a.timestamp = d,
                            b.push(a)
                    }) : (c.timestamp = d, b.push(c))
                }),
                    b
            },
                c = function(a) {
                    var b = a.metrics,
                        c = a.groupBy,
                        e = a.granularity,
                        f = [];
                    return "all" !== e && f.push({
                        data: "timestamp",
                        title: "Timestamp",
                        className: "dt-center",
                        render: function(a) {
                            return a ? '<div class="timestamp">' + d.dateToFormatStr(a, {
                                granularity: e,
                                dailyFormat: "YYYY-MM-DD, ddd",
                                hourlyFormat: "YYYY-MM-DD HH:mm, ddd"
                            }) + "</div>": '<div class="timestamp summary">Summary</div>'
                        }
                    }),
                        c && c.forEach(function(a) {
                        f.push({
                            data: a,
                            title: $('.groupbyForm input[value="' + a + '"]').parent().text().trim(),
                            className: "dt-center " + a
                        })
                    }),
                        b.forEach(function(a) {
                            f.push({
                                data: a.name,
                                title: a.label || a.name,
                                className: "dt-center",
                                render: function(b) {
                                    return d.formatLabelStr(d.formatNumberPrecision(b).toLocaleString(), a.template)
                                }
                            })
                        }),
                        f
                },
                a.draw = function(a) {
                    console.log("draw--here............is true");

                    var d = b(a.data, a.expids),
                        e = c(a),
                        f = "all" !== a.granularity ? "timestamp": a.metrics && a.metrics[0] && a.metrics[0].name,
                        g = _.findIndex(e,
                            function(a) {
                                return a.data === f
                            }),
                        h = -1 === g ? 0 : g;
                    a.metrics && 0 !== a.metrics.length && ($(".table-container").html('<table cellpadding="0" cellspacing="0" class="cell-border result-table"></table>'), $(".result-table").dataTable({
                        data: d,
                        pageLength: 100,
                        ordering: !0,
                        order: [[h, "desc"]],
                        columns: e
                    }))
                }
        });
var table = require("page_detail/table"),
    dataUrl = "/data/page_detail/" + window.settings.pageType;
require("common/form").init({
    dataUrl: dataUrl,
    renderResult: function(a) {
        table.draw(a)
    }
});